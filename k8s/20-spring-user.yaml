apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-user-service
spec:
  replicas: 1
  selector: { matchLabels: { app: spring-user-service } }
  template:
    metadata: { labels: { app: spring-user-service } }
    spec:
      containers:
      - name: spring-user-service
        image: docker.io/nassimeelkamari/microservices-spring-user-service:latest
        imagePullPolicy: IfNotPresent
        ports: [{ containerPort: 8081 }]
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql:3306/todo_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef: { name: app-config, key: DB_USER }
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef: { name: mysql-secret, key: MYSQL_ROOT_PASSWORD }
        readinessProbe:
          httpGet: { path: /actuator/health, port: 8081 }
          initialDelaySeconds: 20
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /actuator/health, port: 8081 }
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: spring-user-service
spec:
  selector: { app: spring-user-service }
  ports: [{ port: 8081, targetPort: 8081 }]
